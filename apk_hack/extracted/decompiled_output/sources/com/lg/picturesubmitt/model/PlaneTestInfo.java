package com.lg.picturesubmitt.model;

import androidx.core.app.NotificationManagerCompat;
/* loaded from: /home/j/curio/fpv-drone-hack-lab/apk_hack/extracted/classes.dex */
public class PlaneTestInfo {
    public int AirplaneLat;
    public int AirplaneLon;
    public int AttitudePitch;
    public int AttitudeRoll;
    public int AttitudeYaw;
    public int BaroInitOk;
    public int BatVal;
    public int FlowInitOk;
    public int GpsFine;
    public int GpsInitOk;
    public int GpsNum;
    public int GpsQuality;
    public int InsInitOk;
    public int MagInitOk;
    public int acc_x;
    public int acc_y;
    public int acc_z;
    public int baro_alt;
    public int current1;
    public int current2;
    public int gyro_x;
    public int gyro_y;
    public int gyro_z;
    public int mag_x;
    public int mag_y;
    public int mag_z;
    public int temperature;

    public PlaneTestInfo(int i3, int i5, int i6, int i7, int i8, int i9, int i10, int i11, int i12, int i13, int i14, int i15, int i16, int i17, int i18, int i19, int i20, int i21, int i22, int i23, int i24, int i25, int i26, int i27, int i28, int i29, int i30) {
        this.gyro_x = i3;
        this.gyro_y = i5;
        this.gyro_z = i6;
        this.acc_x = i7;
        this.acc_y = i8;
        this.acc_z = i9;
        this.mag_x = i10;
        this.mag_y = i11;
        this.mag_z = i12;
        this.BatVal = i13;
        this.GpsNum = i14;
        this.AttitudeRoll = i15;
        this.AttitudePitch = i16;
        this.AttitudeYaw = i17;
        this.InsInitOk = i18;
        this.BaroInitOk = i19;
        this.MagInitOk = i20;
        this.GpsInitOk = i21;
        this.FlowInitOk = i22;
        this.AirplaneLon = i23;
        this.AirplaneLat = i24;
        this.temperature = i25;
        this.baro_alt = i26;
        this.GpsFine = i27;
        this.GpsQuality = i28;
        this.current1 = i29;
        this.current2 = i30;
    }

    public String toString() {
        StringBuilder sb = new StringBuilder("PlaneTestInfo{陀螺仪X轴=");
        sb.append(this.gyro_x);
        sb.append(", 陀螺仪Y轴=");
        sb.append(this.gyro_y);
        sb.append(", 陀螺仪Z轴=");
        sb.append(this.gyro_z);
        sb.append(", 加速度X轴=");
        sb.append(this.acc_x);
        sb.append(", 加速度Y轴=");
        sb.append(this.acc_y);
        sb.append(", 加速度Z轴=");
        sb.append(this.acc_z);
        sb.append(", 罗盘X轴=");
        sb.append(this.mag_x);
        sb.append(", 罗盘Y轴=");
        sb.append(this.mag_y);
        sb.append(", 罗盘Z轴=");
        sb.append(this.mag_z);
        sb.append(", 电池电压=");
        sb.append(this.BatVal / 100.0d);
        sb.append(", 卫星颗数=");
        sb.append(this.GpsNum);
        sb.append(", 横滚角=");
        sb.append(this.AttitudeRoll - 180);
        sb.append(", 俯仰角=");
        sb.append(this.AttitudePitch - 180);
        sb.append(", 偏航角=");
        sb.append(this.AttitudeYaw);
        sb.append(", 陀螺仪正常=");
        sb.append(this.InsInitOk);
        sb.append(", 气压计正常=");
        sb.append(this.BaroInitOk);
        sb.append(", 罗盘正常=");
        sb.append(this.MagInitOk);
        sb.append(", GPS正常=");
        sb.append(this.GpsInitOk);
        sb.append(", 光流正常=");
        sb.append(this.FlowInitOk);
        sb.append(", GPS经度=");
        sb.append(this.AirplaneLon / 1.0E7d);
        sb.append(", GPS纬度=");
        sb.append(this.AirplaneLat / 1.0E7d);
        sb.append(", 温度=");
        sb.append(this.temperature);
        sb.append(", 气压计高度=");
        sb.append((this.baro_alt + NotificationManagerCompat.IMPORTANCE_UNSPECIFIED) / 10.0d);
        sb.append(", GPS定位=");
        sb.append(this.GpsFine);
        sb.append(", GPS定位精度=");
        sb.append(this.GpsQuality / 100.0d);
        sb.append(", 电量1=");
        sb.append(this.current1);
        sb.append(", 电量2=");
        sb.append(this.current2);
        sb.append('}');
        return sb.toString();
    }
}
